---
/* Component for rendering social media links with icons.
 *
 * Props:
 * - socials: Array<{
 *     platform: string,
 *     url: string,
 *     userName?: string
 *   }> - Social media links
 * - size?: number - Icon size in pixels
 * - fill?: boolean - Use filled icons
 * - class?: string - Additional CSS classes
 *
 * Example usage:
 * <SocialsCloud
 *   socials={[
 *     { platform: "github", url: "https://github.com/user" },
 *     { platform: "twitter", url: "https://twitter.com/user" }
 *   ]}
 *   size={24}
 * />
 *
 * Notes:
 * - Auto-adjusts icon size based on count
 * - Supports filled/outlined icons
 * - Responsive flex layout
 * - Hover effects
 * - Accessible links
 */

import SocialIcon from "./utils/SocialIcon.astro";
import { getSocialLink } from "src/Types/types";

interface Social {
  platform: string;
  popup?: string;
  url?: string | undefined;
  username: string;
}

interface Props {
  socials: Social[];
  size?: number;
  fill?: boolean;
  class?: string | undefined;
}

const { socials, size, fill = false, class: className } = Astro.props;

function getIconSize(count: number): number {
  // use size if size else size relative to count
  if (size) return size;
  if (count <= 3) return 24;
  if (count <= 7) return 20;
  return 22;
}

const iconSize = getIconSize(socials.length);
---

<span class:list={["m-0 inline-flex flex-wrap justify-start p-0 md:max-w-md", className]}>
  {
    socials.map((social) => (
      <SocialIcon
        platform={social.platform}
        popup={social.popup}
        url={social.url || getSocialLink(social.platform, social.username) || "#"}
        username={social.username || ""}
        size={iconSize}
        fill={fill}
        class="-mr-2"
      />
    ))
  }
</span>
