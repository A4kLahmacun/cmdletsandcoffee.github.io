---
/* Component for rendering accessible tooltips.
 *
 * Props:
 * - triggerText?: string - Text to trigger tooltip
 * - tooltipText?: string - Tooltip content
 * - neonify?: boolean - Enable neon effect
 * - class?: string - Additional CSS classes
 *
 * Example usage:
 * <Tooltip
 *   triggerText="Hover me"
 *   tooltipText="More information"
 *   neonify={true}
 * />
 *
 * Notes:
 * - Proper ARIA attributes
 * - Optional neon effect
 * - Named slot support https://docs.astro.build/en/basics/astro-components/#named-slots
 * - Responsive positioning
 * - Smooth transitions
 */

interface Props {
  triggerText?: string;
  tooltipText?: string;
  neonify?: boolean | "true" | "false";
  class?: string | undefined;
}

const { triggerText, tooltipText, neonify = false, class: className } = Astro.props;

const options = { "rounded-theme": true };
---

<span class="group relative inline-block hover:cursor-help">
  <span class:list={[{ neon: neonify }, className]} data-text={tooltipText} aria-label={tooltipText}>
    <slot name="trigger">{triggerText}</slot>
  </span>

  <span
    class:list={[
      "absolute bottom-[40px] left-1/2 z-10 mb-2 hidden -translate-x-1/2 transform whitespace-nowrap border-2 bg-theme-primary p-3 font-mono text-sm font-semibold tracking-wide shadow-sm group-hover:block",
      options,
    ]}
  >
    <slot name="content">{tooltipText}</slot>
    <span
      class:list={[
        "absolute bottom-[-8px] left-1/2 h-0 w-0 -translate-x-1/2 transform",
        "border-l-[8px] border-r-[8px] border-t-[8px] border-l-transparent border-r-transparent",
      ]}></span>
  </span>
</span>
