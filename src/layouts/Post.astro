---
// Layout component that wraps around pages and blog posts, providing consistent structure and styling. you can read more about it here: https://docs.astro.build/en/guides/layouts/

import type { CollectionEntry } from "astro:content";

import { COLLECTION_NAMES_LIST } from "src/alkaline.config";

import { getEntry, render } from "astro:content";
import { Image } from "astro:assets";

import Layout from "@layouts/Layout.astro";
import Tags from "@components/Astro/Tags.astro";
import Author from "@components/Astro/Author.astro";
import Categories from "@components/Astro/Categories.astro";

interface Props {
  collectionName: (typeof COLLECTION_NAMES_LIST)[number];
  postId: string | number;
  tags: string[] | undefined | null;
  class?: string | undefined;
}

const { class: className, collectionName, postId } = Astro.props;

const options = { "rounded-theme": true };

const entry: CollectionEntry<(typeof COLLECTION_NAMES_LIST)[number]> | undefined = await getEntry(
  collectionName,
  String(postId)
);

if (!entry) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const { Content } = await render(entry);
---

<Layout title={entry.data.title} description={entry.data.description}>
  <section class="mb-2 mt-0">
    <article class:list={["prose", className]}>
      {entry.data.subtitle && <p class="h2">{entry.data.subtitle}</p>}

      {
        entry.data.cover && (
          <Image
            src={entry.data.cover.src}
            alt={entry.data.cover.alt || entry.data.title}
            class:list={["my-4 h-auto max-h-[25rem] w-full object-cover", options]}
            width={600}
          />
        )
      }

      <Author authorId={entry.data.authorId} pubDateTime={entry.data.pubDatetime} />
      {
        (entry.data.category || entry.data.tags) && (
          <div class="-mt-4 mb-14 flex flex-col">
            {entry.data.category && (
              <span class="flex items-baseline">
                <span class="font-bold">Category:</span>
                <Categories category={entry.data.category} class="ml-2 mt-2" />
              </span>
            )}
            {entry.data.tags && (
              <span class="flex items-baseline">
                <span class="font-bold">Tags:</span>
                <Tags tags={entry.data.tags} class="ml-2 mt-2" />
              </span>
            )}
          </div>
        )
      }

      <Content />
    </article>
  </section>
</Layout>
